version: "3.8"

services:
  django:
    container_name: django
    build:
      context: ./django
    image: trinity/django
    restart: always
    ports:
      - "8000-8020:8000-8020"
    volumes:
      - django:/etc/develop
    environment:
      - PROJECT_NAME=${PROJECT_NAME}
      - DB_USER=${DB_USER}
      - DB_NAME=${DB_NAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - SERVER_FRONTEND_IP=${SERVER_FRONTEND_IP}
      - CHAT_HOST=chat
      - CHAT_PORT=8000
      - PONG_HOST=pong
      - PONG_PORT=8000
    networks:
      - django-net
      - postgres-net
    depends_on:
      postgres:
        condition: service_healthy


  postgres:
    container_name: postgres
    build:
      context: ./postgres
    image: trinity/postgres
    restart: always
    expose:
      - "$DB_PORT"
    volumes:
      - postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-p$DB_PORT", "-h127.0.0.1", "-d$DB_NAME", "-U$DB_USER"]
      retries: 10
      interval: 5s
      start_interval: 3s
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
      - PGDATA=${PGDATA}
    networks:
      - postgres-net


  pong:
    container_name: pong
    build:
      context: ./pong
    image: trinity/pong
    restart: always
    ports:
      - "7000-7020:8000-8020"
    volumes:
      - pong:/etc/develop
    environment:
      - PROJECT_NAME=${PONGAPP_NAME}
      - DB_USER=${PONGDB_USER}
      - DB_NAME=${PONGDB_NAME}
      - DB_PASSWORD=${PONGDB_PASSWORD}
      - DB_HOST=${PONGDB_HOST}
      - DB_PORT=${PONGDB_PORT}
      - SERVER_FRONTEND_IP=${SERVER_FRONTEND_IP}
    networks:
      - django-net
      - pongdb-net
    depends_on:
      pongdb:
        condition: service_healthy


  pongdb:
    container_name: pongdb
    build:
      context: ./pongdb
    image: trinity/pongdb
    restart: always
    expose:
      - "$PONGDB_PORT"
    volumes:
      - pongdb:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-p$PONGDB_PORT", "-h127.0.0.1", "-d$PONGDB_NAME", "-U$PONGDB_USER"]
      retries: 10
      interval: 5s
      start_interval: 3s
    environment:
      - POSTGRES_PASSWORD=${PONGDB_PASSWORD}
      - POSTGRES_USER=${PONGDB_USER}
      - POSTGRES_DB=${PONGDB_NAME}
      - PGDATA=${PGDATA}
    networks:
      - pongdb-net


  chat:
    container_name: chat
    build:
      context: ./chat
    image: trinity/chat
    restart: always
    ports:
      - "9000-9020:8000-8020"
    volumes:
      - chat:/etc/develop
    environment:
      - PROJECT_NAME=${CHATAPP_NAME}
      - DB_USER=${CHATDB_USER}
      - DB_NAME=${CHATDB_NAME}
      - DB_PASSWORD=${CHATDB_PASSWORD}
      - DB_HOST=${CHATDB_HOST}
      - DB_PORT=${CHATDB_PORT}
      - SERVER_FRONTEND_IP=${SERVER_FRONTEND_IP}
    networks:
      - django-net
      - chatdb-net
    depends_on:
      chatdb:
        condition: service_healthy


  chatdb:
    container_name: chatdb
    build:
      context: ./chatdb
    image: trinity/chatdb
    restart: always
    expose:
      - "$CHATDB_PORT"
    volumes:
      - chatdb:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-p$CHATDB_PORT", "-h127.0.0.1", "-d$CHATDB_NAME", "-U$CHATDB_USER"]
      retries: 10
      interval: 5s
      start_interval: 3s
    environment:
      - POSTGRES_PASSWORD=${CHATDB_PASSWORD}
      - POSTGRES_USER=${CHATDB_USER}
      - POSTGRES_DB=${CHATDB_NAME}
      - PGDATA=${PGDATA}
    networks:
      - chatdb-net


  cron:
    container_name: cron
    build:
      context: ./cron
    image: trinity/cron
    restart: always
    networks:
      - postgres-net
    depends_on:
      postgres:
        condition: service_healthy


volumes:
  django:
    name: "django"
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "$PWD/data/django"
  pong:
    name: "pong"
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "$PWD/data/pong"
  chat:
    name: "chat"
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "$PWD/data/chat"
  postgres:
    name: "postgres"
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "$PWD/data/postgres"
  pongdb:
    name: "pongdb"
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "$PWD/data/pongdb"
  chatdb:
    name: "chatdb"
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "$PWD/data/chatdb"

networks:
  django-net:
    name: "django-net"

  postgres-net:
    name: "postgres-net"

  pongdb-net:
    name: "pongdb-net"

  chatdb-net:
    name: "chatdb-net"
